package main

// Generated by https://quicktype.io

type Schedule struct {
	Internal struct {
		PubDateTime string `json:"pubDateTime"`
		XSLT        string `json:"xslt"`
		EventName   string `json:"eventName"`
	}
	League struct {
		LastStandardGamePlayedIndex int64         `json:"lastStandardGamePlayedIndex"`
		Standard                    []Standard    `json:"standard"`
		Africa                      []interface{} `json:"africa"`
		Sacramento                  []interface{} `json:"sacramento"`
		Vegas                       []Standard    `json:"vegas"`
		Utah                        []interface{} `json:"utah"`
	}
}

type Standard struct {
	SeasonStageID     int64         `json:"seasonStageId"`
	GameID            string        `json:"gameId"`
	StatusNum         int64         `json:"statusNum"`
	ExtendedStatusNum int64         `json:"extendedStatusNum"`
	StartTimeUTC      string        `json:"startTimeUTC"`
	StartDateEastern  string        `json:"startDateEastern"`
	IsHomeTeam        bool          `json:"isHomeTeam"`
	Watch             Watch         `json:"watch"`
	Nugget            Nugget        `json:"nugget"`
	VTeam             Schedule_Team `json:"vTeam"`
	HTeam             Schedule_Team `json:"hTeam"`
}

type Schedule_Team struct {
	TeamID string `json:"teamId"`
	Score  string `json:"score"`
}

type Nugget struct {
	Text string `json:"text"`
}

type Watch struct {
	Broadcast Broadcast `json:"broadcast"`
}

type Broadcast struct {
	Broadcasters Broadcasters `json:"broadcasters"`
	Video        Video        `json:"video"`
	Audio        Audio        `json:"audio"`
}

type Audio struct {
	National HTeamClass `json:"national"`
	VTeam    HTeamClass `json:"vTeam"`
	HTeam    HTeamClass `json:"hTeam"`
}

type HTeamClass struct {
	Streams      []HTeamStream `json:"streams"`
	Broadcasters []Canadian    `json:"broadcasters"`
}

type Canadian struct {
	ShortName string `json:"shortName"`
	LongName  string `json:"longName"`
}

type HTeamStream struct {
	Language Language `json:"language"`
	IsOnAir  bool     `json:"isOnAir"`
	StreamID string   `json:"streamId"`
}

type Broadcasters struct {
	National        []Canadian    `json:"national"`
	Canadian        []Canadian    `json:"canadian"`
	SpanishNational []interface{} `json:"spanish_national"`
	VTeam           []Canadian    `json:"vTeam"`
	HTeam           []Canadian    `json:"hTeam"`
}

type Video struct {
	RegionalBlackoutCodes string        `json:"regionalBlackoutCodes"`
	CanPurchase           bool          `json:"canPurchase"`
	IsLeaguePass          bool          `json:"isLeaguePass"`
	IsNationalBlackout    bool          `json:"isNationalBlackout"`
	IsTNTOT               bool          `json:"isTNTOT"`
	TntotIsOnAir          bool          `json:"tntotIsOnAir"`
	Streams               []VideoStream `json:"streams"`
	DeepLink              []DeepLink    `json:"deepLink"`
}

type DeepLink struct {
	Broadcaster         Broadcaster `json:"broadcaster"`
	RegionalMarketCodes string      `json:"regionalMarketCodes"`
	IosApp              string      `json:"iosApp"`
	AndroidApp          string      `json:"androidApp"`
	DesktopWeb          string      `json:"desktopWeb"`
	MobileWeb           string      `json:"mobileWeb"`
}

type VideoStream struct {
	StreamType            StreamType `json:"streamType"`
	IsOnAir               bool       `json:"isOnAir"`
	DoesArchiveExist      bool       `json:"doesArchiveExist"`
	IsArchiveAvailToWatch bool       `json:"isArchiveAvailToWatch"`
	StreamID              string     `json:"streamId"`
	Duration              int64      `json:"duration"`
}

type Language string

const (
	English Language = "English"
	Spanish Language = "Spanish"
)

type Broadcaster string

const (
	Tnt   Broadcaster = "TNT"
	Tntot Broadcaster = "TNTOT"
)

type StreamType string

const (
	Condensed StreamType = "condensed"
	HTeam     StreamType = "hTeam"
	Mobile    StreamType = "mobile"
	VTeam     StreamType = "vTeam"
)
